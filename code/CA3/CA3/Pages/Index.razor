@page "/"
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Chuck Norris Fact Generator</PageTitle>
<div class="d-flex justify-content-center">
    <div class="col-6 align-self-center">
    <h1>Random Chuck Norris Facts!</h1>
    <p>"Chuck Norris facts are satirical factoids about American martial artist and actor Chuck Norris that have become an Internet phenomenon 
        widespread in popular culture. These 'facts' are absurd hyperbolic claims about Norris's toughness, attitude, sophistication, and masculinity."
        </p>
        <div class="d-flex justify-content-center">
        @if (jsonData != null)
        {
            <BSCard CardType="CardType.Card" style="width: 18rem;">
                <BSCard CardType="CardType.Body">
                    <BSCard CardType="CardType.Title">Your random fact!</BSCard>
                    <BSCard CardType="CardType.Text">
                        <blockquote class="blockquote">
                            <p class="mb-0">
                                  @foreach (var item in jsonData.value)
                                    {
                                    @item
                                    }
                            </p>
                        </blockquote>
                    </BSCard>
                    <BSButton Color="BSColor.Primary">
                    <p>Created:</p>
                        @foreach (var item in jsonData.created_at)
                        {
                            @item
                        }
                    </BSButton>
                </BSCard>
            </BSCard>
        }
        else
        {
            <p>No data returned.</p>
        }
        </div>
    </div>
</div>

@code {
    private ApiResponse jsonData;

    protected override async Task OnInitializedAsync()
    {
        // Initialize the list as an empty list
        jsonData = new ApiResponse();

        // Make a HTTP GET request to the specified URL
        var response = await Http.GetAsync("https://api.chucknorris.io/jokes/random");

        // Read the response as a JSON object
        jsonData = JsonConvert.DeserializeObject<ApiResponse>(await response.Content.ReadAsStringAsync());
    }

    // API response model
    public class ApiResponse
    {
        public object[] categories { get; set; }
        public string created_at { get; set; }
        public string icon_url { get; set; }
        public string id { get; set; }
        public string updated_at { get; set; }
        public string url { get; set; }
        public string value { get; set; }
    }
}